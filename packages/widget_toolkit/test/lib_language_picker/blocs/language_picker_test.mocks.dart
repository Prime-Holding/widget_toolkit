// Mocks generated by Mockito 5.3.2 from annotations
// in widget_toolkit/test/lib_language_picker/blocs/language_picker_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:widget_toolkit/language_picker.dart' as _i2;

import '../services/language_picker_service_mock.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLanguageModel_0 extends _i1.SmartFake implements _i2.LanguageModel {
  _FakeLanguageModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LanguagePickerServiceMock].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagePickerServiceMock extends _i1.Mock
    implements _i3.LanguagePickerServiceMock {
  MockLanguagePickerServiceMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.LanguageModel> get languages => (super.noSuchMethod(
        Invocation.getter(#languages),
        returnValue: <_i2.LanguageModel>[],
      ) as List<_i2.LanguageModel>);
  @override
  _i4.Future<List<_i2.LanguageModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.LanguageModel>>.value(<_i2.LanguageModel>[]),
      ) as _i4.Future<List<_i2.LanguageModel>>);
  @override
  _i4.Future<_i2.LanguageModel> getCurrent() => (super.noSuchMethod(
        Invocation.method(
          #getCurrent,
          [],
        ),
        returnValue: _i4.Future<_i2.LanguageModel>.value(_FakeLanguageModel_0(
          this,
          Invocation.method(
            #getCurrent,
            [],
          ),
        )),
      ) as _i4.Future<_i2.LanguageModel>);
  @override
  _i4.Future<void> setCurrent(_i2.LanguageModel? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrent,
          [language],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.SelectedLanguageModel>> getLanguageList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLanguageList,
          [],
        ),
        returnValue: _i4.Future<List<_i2.SelectedLanguageModel>>.value(
            <_i2.SelectedLanguageModel>[]),
      ) as _i4.Future<List<_i2.SelectedLanguageModel>>);
}
