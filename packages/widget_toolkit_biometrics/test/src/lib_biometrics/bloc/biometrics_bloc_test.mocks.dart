// Mocks generated by Mockito 5.3.2 from annotations
// in widget_toolkit_biometrics/test/src/lib_biometrics/bloc/biometrics_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:widget_toolkit_biometrics/src/models/biometrics_authentication_type.dart'
    as _i4;
import 'package:widget_toolkit_biometrics/src/models/biometrics_setting_message_type.dart'
    as _i5;
import 'package:widget_toolkit_biometrics/src/services/biometrics_service.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BiometricsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricsService extends _i1.Mock implements _i2.BiometricsService {
  MockBiometricsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get canCheckBiometrics => (super.noSuchMethod(
        Invocation.getter(#canCheckBiometrics),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> get isDeviceSupported => (super.noSuchMethod(
        Invocation.getter(#isDeviceSupported),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.BiometricsAuthType>> get availableBiometrics =>
      (super.noSuchMethod(
        Invocation.getter(#availableBiometrics),
        returnValue: _i3.Future<List<_i4.BiometricsAuthType>>.value(
            <_i4.BiometricsAuthType>[]),
      ) as _i3.Future<List<_i4.BiometricsAuthType>>);
  @override
  _i3.Future<bool> authenticate(String? localizedReason) => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [localizedReason],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> areBiometricsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #areBiometricsEnabled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> setBiometricsEnabled(bool? areBiometricsEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBiometricsEnabled,
          [areBiometricsEnabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i5.BiometricsSettingMessageType> enableBiometrics(
    bool? value,
    String? localizedMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableBiometrics,
          [
            value,
            localizedMessage,
          ],
        ),
        returnValue: _i3.Future<_i5.BiometricsSettingMessageType>.value(
            _i5.BiometricsSettingMessageType.biometricsAreDisabled),
      ) as _i3.Future<_i5.BiometricsSettingMessageType>);
}
