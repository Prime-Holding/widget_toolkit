// Mocks generated by Mockito 5.4.2 from annotations
// in widget_toolkit_qr/test/lib_qr_scanner/blocs/qr_scanner_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:widget_toolkit_qr/src/lib_qr_scanner/services/qr_validation_service.dart'
    as _i3;
import 'package:widget_toolkit_qr/src/lib_qr_scanner/services/system_permissions_service.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [QrValidationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQrValidationService<T> extends _i1.Mock
    implements _i3.QrValidationService<T> {
  MockQrValidationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<T> validateQrCode(String? qrCode) => (super.noSuchMethod(
        Invocation.method(
          #validateQrCode,
          [qrCode],
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #validateQrCode,
                  [qrCode],
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #validateQrCode,
                [qrCode],
              ),
            ),
      ) as _i2.Future<T>);
}

/// A class which mocks [SystemPermissionsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSystemPermissionsService extends _i1.Mock
    implements _i5.SystemPermissionsService {
  MockSystemPermissionsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> checkForCameraPermissions() => (super.noSuchMethod(
        Invocation.method(
          #checkForCameraPermissions,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> requestCameraPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestCameraPermission,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}
