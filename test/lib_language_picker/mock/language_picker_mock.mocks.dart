// Mocks generated by Mockito 5.3.2 from annotations
// in widget_toolkit/test/lib_language_picker/mock/language_picker_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:rx_bloc/rx_bloc.dart' as _i7;
import 'package:rxdart/rxdart.dart' as _i2;
import 'package:widget_toolkit/src/base/models/common/language_model.dart'
    as _i4;
import 'package:widget_toolkit/src/base/models/errors/error_model.dart' as _i5;
import 'package:widget_toolkit/src/lib_language_picker/blocs/language_picker_bloc.dart'
    as _i3;
import 'package:widget_toolkit/src/lib_language_picker/models/selected_language_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConnectableStream_0<T> extends _i1.SmartFake
    implements _i2.ConnectableStream<T> {
  _FakeConnectableStream_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLanguagePickerBlocEvents_1 extends _i1.SmartFake
    implements _i3.LanguagePickerBlocEvents {
  _FakeLanguagePickerBlocEvents_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLanguagePickerBlocStates_2 extends _i1.SmartFake
    implements _i3.LanguagePickerBlocStates {
  _FakeLanguagePickerBlocStates_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LanguagePickerBlocStates].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagePickerBlocStates extends _i1.Mock
    implements _i3.LanguagePickerBlocStates {
  MockLanguagePickerBlocStates() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ConnectableStream<_i4.LanguageModel> get currentLanguage =>
      (super.noSuchMethod(
        Invocation.getter(#currentLanguage),
        returnValue: _FakeConnectableStream_0<_i4.LanguageModel>(
          this,
          Invocation.getter(#currentLanguage),
        ),
      ) as _i2.ConnectableStream<_i4.LanguageModel>);
  @override
  _i2.ConnectableStream<_i5.ErrorModel?> get errors => (super.noSuchMethod(
        Invocation.getter(#errors),
        returnValue: _FakeConnectableStream_0<_i5.ErrorModel?>(
          this,
          Invocation.getter(#errors),
        ),
      ) as _i2.ConnectableStream<_i5.ErrorModel?>);
  @override
  _i2.ConnectableStream<List<_i6.SelectedLanguageModel>> get languages =>
      (super.noSuchMethod(
        Invocation.getter(#languages),
        returnValue: _FakeConnectableStream_0<List<_i6.SelectedLanguageModel>>(
          this,
          Invocation.getter(#languages),
        ),
      ) as _i2.ConnectableStream<List<_i6.SelectedLanguageModel>>);
  @override
  _i2.ConnectableStream<_i7.LoadingWithTag> get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: _FakeConnectableStream_0<_i7.LoadingWithTag>(
          this,
          Invocation.getter(#loading),
        ),
      ) as _i2.ConnectableStream<_i7.LoadingWithTag>);
}

/// A class which mocks [LanguagePickerBlocEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagePickerBlocEvents extends _i1.Mock
    implements _i3.LanguagePickerBlocEvents {
  MockLanguagePickerBlocEvents() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setCurrent(_i4.LanguageModel? language) => super.noSuchMethod(
        Invocation.method(
          #setCurrent,
          [language],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LanguagePickerBlocType].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagePickerBlocType extends _i1.Mock
    implements _i3.LanguagePickerBlocType {
  MockLanguagePickerBlocType() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.LanguagePickerBlocEvents get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _FakeLanguagePickerBlocEvents_1(
          this,
          Invocation.getter(#events),
        ),
      ) as _i3.LanguagePickerBlocEvents);
  @override
  _i3.LanguagePickerBlocStates get states => (super.noSuchMethod(
        Invocation.getter(#states),
        returnValue: _FakeLanguagePickerBlocStates_2(
          this,
          Invocation.getter(#states),
        ),
      ) as _i3.LanguagePickerBlocStates);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
